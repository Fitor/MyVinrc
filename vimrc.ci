" vimrc.ci
" An vimrc file created by Chen Ci.
"
" Maintainer:   Chen Ci <chen2033@live.com>
"
" Create Time:  Thu, 23 Mar 2017 01:51:43 +0800
" Change Log:   Create this file.  Thu, 23 Mar 2017 01:53:22 +0800
"
" To use this file, create a hard link to it.
" ln vimrc.ci .vimrc
"   or
" ln vimrc.ci .vim/vimrc

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" mapleader
let mapleader = ";"

" CI.vim
if isdirectory($HOME . "/.vim/MyVinrc/CI.vim")
    set runtimepath+=$HOME/.vim/MyVinrc/CI.vim
endif

" map
if filereadable($HOME . "/.vim/MyVinrc/map.vim")
    source $HOME/.vim/MyVinrc/map.vim
endif

" syntax
if filereadable($HOME . "/.vim/MyVinrc/syntax.vim")
    source $HOME/.vim/MyVinrc/syntax.vim
endif

" Vundle
if isdirectory($HOME . "/.vim/bundle/Vundle.vim")
    filetype off
    set runtimepath+=$HOME/.vim/bundle/Vundle.vim
    call vundle#begin()
    Plugin 'VundleVim/Vundle.vim'
    if isdirectory($HOME . "/.vim/MyVinrc")
        if filereadable($HOME . "/.vim/MyVinrc/Vundle_config.vim")
            source $HOME/.vim/MyVinrc/Vundle_config.vim
        endif
    endif
    call vundle#end()
endif

" MyVinrc_path
let MyVinrc_path = $HOME . "/.vim/MyVinrc"

" configure files
let cfg_files = split(globpath(MyVinrc_path, "*.vim"), '\n')

" load configure files
for f in cfg_files
    if 0 != filereadable(f)
        execute "source " . f
    endif
endfor

" When editing a file, always jump to the last known cursor position.
" Don't do it when the position is invalid or when inside an event handler
" (happens when dropping a file on gvim).
autocmd BufReadPost *
\ if line("'\"") >= 1 && line("'\"") <= line("$") |
\   exe "normal! g`\"" |
\ endif

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

filetype plugin indent on      " Automatically detect file types.

setlocal noswapfile
" set nobackup   " do not keep a backup file, use versions instead
set backup     " keep a backup file (restore to previoius version)
" set undofile  " keep an undo file (undo changes after closing)

set history=50  " keep 50 lines of command line history
set ruler       " show the cursor position all the time
set showcmd     " display incomplete commands
set incsearch   " do incremental searching
set ignorecase
set number
set relativenumber
set numberwidth=5
set cursorline
set cursorcolumn
set foldenable
set foldmethod=manual
" set foldcolumn=4
set cmdheight=2

" apearance configure
colorscheme molokai
set t_Co=256

set tabstop=4	" Number of spaces that a <Tab> in the file counts for.
set expandtab   " In Insert mode: Use the appropriate number of spaces to insert a <Tab>.
set shiftwidth=4    " Number of spaces to use for each step of (auto)indent.
" set softtabstop=4   " Number of spaces that a <Tab> counts for while performing editing operations, like inserting a <Tab> or using <BS>.
set autoindent      " Copy indent from current line when starting a new line.
set cindent " Enables automatic C program indenting.

set bufhidden=hide
set linespace=0
set scrolloff=3

set showtabline=2 " always show the tabline

set matchtime=1" Highlight current line

" get the root right to write
cmap w!! w !sudo tee > /dev/null %

hi Normal ctermfg=252 ctermbg=none

" Highlight current line
"au Winleave * set nocursorline nocursorcolumn
"au WinEnter * set cursorline nocursorcolumn

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" set file encoding
set fileencodings=utf-8,gbk,ucs-bom,gb18030,gb2312,cp936
set enc=utf-8

let g:configure_last=1

